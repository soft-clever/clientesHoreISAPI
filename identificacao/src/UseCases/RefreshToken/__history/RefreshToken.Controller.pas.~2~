unit RefreshToken.Controller;

interface

uses
  Horse, REST.Json, System.SysUtils, Usuario.Entity,
  System.Json, Auth.Token, Service.Utils, System.Generics.Collections;

type
  iRefreshTokenController = interface
    ['{354b4edc-7195-41b7-ac16-82ab01c318db}']
    procedure handle(Req: THorseRequest; Res: THorseResponse; Next: TNextProc);
  end;

  TRefreshTokenController = class(TInterfacedObject, iRefreshTokenController)
  private
    FRefreshTokenUseCase: iRefreshTokenUseCase;
  public
    constructor Create(Value: iRefreshTokenUseCase);
    procedure handle(Req: THorseRequest; Res: THorseResponse; Next: TNextProc);

  end;

implementation

constructor TRefreshTokenController.Create(Value: iRefreshTokenUseCase);
begin
  FRefreshTokenUseCase := Value;
end;

procedure TRefreshTokenController.handle(Req: THorseRequest; Res: THorseResponse;
  Next: TNextProc);
var
  LBody: TJSONObject;
begin
  LBody := Req.Body<TJSONObject>;
  if not(Assigned(LBody)) then
    raise EHorseException.New.Error('Body não informado')
      .Status(THTTPStatus.BadRequest);

  LBody := TJSON.ObjectToJsonObject(FRefreshTokenUseCase.execute(LBody));

  Res.Send('Cadastro realizado com sucesso').Status(200);
end;

end.
