unit Auth.Token;

interface

uses JOSE.Core.JWT, JOSE.Core.Builder, System.SysUtils, System.DateUtils;

type
  TToken = class
  private
    class function secretJWT(): string;
  public
    class function gerarToken(claimChave: string = '';
      claimValor: string = ''): string;
  end;

implementation

class function TToken.secretJWT: string;
begin
  result := 'soft@1973';
end;

class function TToken.gerarToken(claimChave: string = '';
  claimValor: string = ''): string;
var
  Token: TJWT;
  CompactToken: String;
begin
  Token := TJWT.Create;
  try
    Token.Claims.IssuedAt := Now;
    Token.Claims.Expiration := IncHour(Now, 1);
    Token.Claims.Issuer := 'Soft Clever Informática LTDA.';

    if ((claimChave <> '') and (claimValor <> '')) then
      Token.Claims.SetClaimOfType<string>(claimChave, claimValor);

    CompactToken := TJOSE.SHA256CompactToken(secretJWT, Token);
  finally
    FreeAndNil(Token);
  end;
  result := CompactToken;
end;

end.
